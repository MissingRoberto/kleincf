---

apiVersion: build.knative.dev/v1alpha1
kind: BuildTemplate
metadata:
  name: buildpack-bits
  namespace: cf-default
spec:
  parameters:
  - name: IMAGE
    description: The name of the image to push
  - name: BUILDPACK_ORDER
    description: A comma separated list of names or URLs for the buildpacks to use. Each buildpack is applied in order.
    default: ""
  - name: SKIP_DETECT
    description: By default, the first buildpack to match is used. If true, detection is skipped and each buildpack contributes in order.
    default: "false"
  - name: DIRECTORY
    description: The directory containing the app
    default: ""
  - name: CACHE
    description: The name of the persistent app cache volume
    default: app-cache

  ## TODO - This should go into "source" ideally
  - name: URL
    description: URL where the app bits are located

  steps:
  ## TODO - This should go into "source" ideally
  # In: a CF app in $DIRECTORY
  # Out: a CF app droplet in /out
  # Out: a build cache in /cache
  - name: download
    image: jszroberto/knative:download
    args: ["bash", "-c", "wget -O archive.zip ${URL} && unzip -o -j archive.zip -d /out/"]
    volumeMounts:
    - name: bits
      mountPath: /out
  # In: a CF app in $DIRECTORY
  # Out: a CF app droplet in /out
  # Out: a build cache in /cache
  - name: build
    image: packs/cf:build
    args: ["-skipDetect=${SKIP_DETECT}", "-buildpackOrder=${BUILDPACK_ORDER}"]
    workingdir: "/bits${DIRECTORY}"
    volumeMounts:
    - name: bits
      mountPath: /bits
    - name: droplet
      mountPath: /out
    - name: "${CACHE}"
      mountPath: /cache

  # In: a CF app droplet in /in
  # Out: an image published as $IMAGE
  - name: export
    image: packs/cf:export
    workingdir: /in
    args: ["${IMAGE}"]
    volumeMounts:
    - name: droplet
      mountPath: /in

  volumes:
  - name: bits
    emptyDir: {}
  - name: droplet
    emptyDir: {}
  - name: app-cache
    emptyDir: {}

